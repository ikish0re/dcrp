{"ast":null,"code":"import _slicedToArray from\"C:/Users/Kishore E G/Documents/React/web-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import{createContext,React,useState,useEffect}from'react';// import apiRequests from '../api/apiRequests'\n// import Popup from 'reactjs-popup';\n// import axios from 'axios';\nimport{jsx as _jsx}from\"react/jsx-runtime\";var DataContext=/*#__PURE__*/createContext({});export var Context=function Context(_ref){var children=_ref.children;var _useState=useState(true),_useState2=_slicedToArray(_useState,2),isLoading=_useState2[0],setIsLoading=_useState2[1];//const [errors, setErrors] = useState({})\nuseEffect(function(){setTimeout(function(){setIsLoading(false);},3000);},[]);// const [errorCard, setErrorCard] = useState(false)\n// //const [displayForErrorCard, setDisplayForErrorCard] = useState('none')\n// //Apply form\n// const [ formData, setFormData ] = useState({\n//     row_id:'',\n//     name:'',\n//     email:'',\n//     age:'',\n//     discordID:'',\n//     ytLink:'',\n//     rpExp:'',\n//     charName:'',\n//     charBackStory:'',\n//     isRulesAgreed:false\n// })\n// const handleFormChange = (e) => {\n//     const { name, value } = e.target\n//     //console.log(e.target.name)\n//     let error = ''\n//     if(name === 'name' && value.length < 4)\n//         error = 'Invalid Name'\n//     else if(name === 'email' && value.length < 10)\n//         error = 'Invalid Email Address'\n//     else if(name === 'age' && (value < 0 || value > 100 ))\n//         error = 'Invalid Age'\n//     else if(name === 'discordTag' && value.length <= 0)\n//         error = 'Invalid Discord Tag'\n//     else if(name === 'rpExp' && (value < 0 || value > 7))\n//         error = 'Invalid Experience'\n//     else if(name === 'charName' && value.length <  3)\n//         error = 'Invalid Character Name'\n//     else if(name === 'charBackStory')\n//     {\n//         let wordCount = value.split(' ')\n//         if(wordCount.length < 2)\n//             error = 'Minimum 100 words'\n//     }\n//     setErrors({\n//         ...errors,\n//         [name]: error\n//     })\n//     const hasErrors = Object.keys(errors).some(key => errors[key] !== '');\n//     setErrorCard(hasErrors);\n//     setFormData({\n//         ...formData,\n//         [name]: name === 'isRulesAgreed' ? !formData.isRulesAgreed : value\n//     })\n// }\n// const [hideCharInfo, showCharInfo] = useState(false)\n// //submit form\n// const submitForm = async (e) => {\n//     e.preventDefault()\n//     if(formData.name !== '' && formData.age !== '' && formData.discordTag  !== '' && formData.rpExp !== '' && formData.charBackStory !== '')\n//     {\n//         try {\n//             formData.row_id = 4\n//             //const baseURL = 'https://v1.nocodeapi.com/kishoreeg/google_sheets/wxqTmMRISINVvPLn/addRows?tabId='\n//             var requestOptions = {\n//                 method: \"post\",\n//                 headers: {\n//                     \"Content-Type\": \"application/json\"\n//                 },\n//                 redirect: \"follow\",\n//                 body: JSON.stringify(formData)\n//             }\n//             const response = await fetch(\"https://v1.nocodeapi.com/kishoreeg/google_sheets/wxqTmMRISINVvPLn/addRows?tabId=sheet1\", requestOptions)\n//             await console.log(\"Response: \", response)\n//         } catch (ex) {\n//             console.log(ex.Message)\n//         }\n//     }\n//     else\n//     setErrors({\n//         general: 'Fill All The Fields'\n//     })\n// }\n// const setAgreed = () => {\n//     setFormData( ...formData, formData.isRulesAgreed=!formData.isRulesAgreed)\n// }\nreturn/*#__PURE__*/_jsx(DataContext.Provider,{value:{isLoading:isLoading,setIsLoading:setIsLoading//, submitForm, setAgreed,\n//hideCharInfo, showCharInfo,\n// handleFormChange, formData, errors,\n// errorCard\n},children:children});};export default DataContext;","map":{"version":3,"names":["createContext","React","useState","useEffect","jsx","_jsx","DataContext","Context","_ref","children","_useState","_useState2","_slicedToArray","isLoading","setIsLoading","setTimeout","Provider","value"],"sources":["C:/Users/Kishore E G/Documents/React/web-app/src/Context/Context.js"],"sourcesContent":["import { createContext, React, useState, useEffect } from 'react'\r\n// import apiRequests from '../api/apiRequests'\r\n// import Popup from 'reactjs-popup';\r\n// import axios from 'axios';\r\n\r\nconst DataContext = createContext({})\r\n\r\nexport const Context = ({children}) => {\r\n    const [isLoading, setIsLoading] = useState(true)\r\n    //const [errors, setErrors] = useState({})\r\n    \r\n    useEffect(() => {\r\n        setTimeout(() => {\r\n            setIsLoading(false)\r\n        }, 3000)\r\n    }, [])\r\n\r\n    // const [errorCard, setErrorCard] = useState(false)\r\n    // //const [displayForErrorCard, setDisplayForErrorCard] = useState('none')\r\n\r\n    \r\n    // //Apply form\r\n    // const [ formData, setFormData ] = useState({\r\n    //     row_id:'',\r\n    //     name:'',\r\n    //     email:'',\r\n    //     age:'',\r\n    //     discordID:'',\r\n    //     ytLink:'',\r\n    //     rpExp:'',\r\n    //     charName:'',\r\n    //     charBackStory:'',\r\n    //     isRulesAgreed:false\r\n    // })\r\n    // const handleFormChange = (e) => {\r\n    //     const { name, value } = e.target\r\n    //     //console.log(e.target.name)\r\n    //     let error = ''\r\n    //     if(name === 'name' && value.length < 4)\r\n    //         error = 'Invalid Name'\r\n    //     else if(name === 'email' && value.length < 10)\r\n    //         error = 'Invalid Email Address'\r\n    //     else if(name === 'age' && (value < 0 || value > 100 ))\r\n    //         error = 'Invalid Age'\r\n    //     else if(name === 'discordTag' && value.length <= 0)\r\n    //         error = 'Invalid Discord Tag'\r\n    //     else if(name === 'rpExp' && (value < 0 || value > 7))\r\n    //         error = 'Invalid Experience'\r\n    //     else if(name === 'charName' && value.length <  3)\r\n    //         error = 'Invalid Character Name'\r\n    //     else if(name === 'charBackStory')\r\n    //     {\r\n    //         let wordCount = value.split(' ')\r\n    //         if(wordCount.length < 2)\r\n    //             error = 'Minimum 100 words'\r\n    //     }\r\n    //     setErrors({\r\n    //         ...errors,\r\n    //         [name]: error\r\n    //     })\r\n    //     const hasErrors = Object.keys(errors).some(key => errors[key] !== '');\r\n    //     setErrorCard(hasErrors);\r\n        \r\n    //     setFormData({\r\n    //         ...formData,\r\n    //         [name]: name === 'isRulesAgreed' ? !formData.isRulesAgreed : value\r\n    //     })\r\n    // }\r\n\r\n    // const [hideCharInfo, showCharInfo] = useState(false)\r\n    // //submit form\r\n    // const submitForm = async (e) => {\r\n    //     e.preventDefault()\r\n    //     if(formData.name !== '' && formData.age !== '' && formData.discordTag  !== '' && formData.rpExp !== '' && formData.charBackStory !== '')\r\n    //     {\r\n    //         try {\r\n    //             formData.row_id = 4\r\n    //             //const baseURL = 'https://v1.nocodeapi.com/kishoreeg/google_sheets/wxqTmMRISINVvPLn/addRows?tabId='\r\n    //             var requestOptions = {\r\n    //                 method: \"post\",\r\n    //                 headers: {\r\n    //                     \"Content-Type\": \"application/json\"\r\n    //                 },\r\n    //                 redirect: \"follow\",\r\n    //                 body: JSON.stringify(formData)\r\n    //             }\r\n    //             const response = await fetch(\"https://v1.nocodeapi.com/kishoreeg/google_sheets/wxqTmMRISINVvPLn/addRows?tabId=sheet1\", requestOptions)\r\n    //             await console.log(\"Response: \", response)\r\n    //         } catch (ex) {\r\n    //             console.log(ex.Message)\r\n    //         }\r\n    //     }\r\n    //     else\r\n    //     setErrors({\r\n    //         general: 'Fill All The Fields'\r\n    //     })\r\n    // }\r\n    // const setAgreed = () => {\r\n    //     setFormData( ...formData, formData.isRulesAgreed=!formData.isRulesAgreed)\r\n    // }\r\n    return (\r\n        <DataContext.Provider value={{\r\n            isLoading, setIsLoading//, submitForm, setAgreed,\r\n            //hideCharInfo, showCharInfo,\r\n           // handleFormChange, formData, errors,\r\n           // errorCard\r\n        }}>\r\n            {children}\r\n        </DataContext.Provider>\r\n    )\r\n}\r\n\r\nexport default DataContext"],"mappings":"kIAAA,OAASA,aAAa,CAAEC,KAAK,CAAEC,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CACjE;AACA;AACA;AAAA,OAAAC,GAAA,IAAAC,IAAA,yBAEA,GAAM,CAAAC,WAAW,cAAGN,aAAa,CAAC,CAAC,CAAC,CAAC,CAErC,MAAO,IAAM,CAAAO,OAAO,CAAG,QAAV,CAAAA,OAAOA,CAAAC,IAAA,CAAmB,IAAd,CAAAC,QAAQ,CAAAD,IAAA,CAARC,QAAQ,CAC7B,IAAAC,SAAA,CAAkCR,QAAQ,CAAC,IAAI,CAAC,CAAAS,UAAA,CAAAC,cAAA,CAAAF,SAAA,IAAzCG,SAAS,CAAAF,UAAA,IAAEG,YAAY,CAAAH,UAAA,IAC9B;AAEAR,SAAS,CAAC,UAAM,CACZY,UAAU,CAAC,UAAM,CACbD,YAAY,CAAC,KAAK,CAAC,CACvB,CAAC,CAAE,IAAI,CAAC,CACZ,CAAC,CAAE,EAAE,CAAC,CAEN;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBACIT,IAAA,CAACC,WAAW,CAACU,QAAQ,EAACC,KAAK,CAAE,CACzBJ,SAAS,CAATA,SAAS,CAAEC,YAAY,CAAZA,YAAY;AACvB;AACD;AACA;AACH,CAAE,CAAAL,QAAA,CACGA,QAAQ,CACS,CAAC,CAE/B,CAAC,CAED,cAAe,CAAAH,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}