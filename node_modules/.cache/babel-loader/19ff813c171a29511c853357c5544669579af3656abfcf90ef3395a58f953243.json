{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Kishore E G\\\\Documents\\\\React\\\\web-app\\\\src\\\\Components\\\\LoadingScreen.js\",\n  _s = $RefreshSig$();\nimport React, { useContext, useEffect } from 'react';\nimport RingLoader from \"react-spinners/RingLoader\";\nimport './LoadingScreen.css';\nimport DataContext, { Context } from '../Context/Context';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst LoadingScreen = () => {\n  _s();\n  const {\n    isLoading,\n    setIsLoading\n  } = useContext(DataContext);\n  useEffect(() => {\n    setTimeout(() => {\n      setIsLoading(false);\n    }, 2000);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: isLoading ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"LoadingScreen\",\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"loader\",\n        children: /*#__PURE__*/_jsxDEV(RingLoader, {\n          color: 'rgb(255, 208, 0)',\n          loading: isLoading,\n          size: 150\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false)\n  }, void 0, false);\n};\n_s(LoadingScreen, \"M8CLUaC/CLMMCt4G5wHqRXOLAEo=\");\n_c = LoadingScreen;\nexport default LoadingScreen;\nvar _c;\n$RefreshReg$(_c, \"LoadingScreen\");","map":{"version":3,"names":["React","useContext","useEffect","RingLoader","DataContext","Context","jsxDEV","_jsxDEV","Fragment","_Fragment","LoadingScreen","_s","isLoading","setIsLoading","setTimeout","children","className","color","loading","size","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Kishore E G/Documents/React/web-app/src/Components/LoadingScreen.js"],"sourcesContent":["import React, { useContext, useEffect } from 'react'\r\nimport RingLoader from \"react-spinners/RingLoader\";\r\nimport './LoadingScreen.css'\r\nimport DataContext, { Context } from '../Context/Context';\r\n\r\nconst LoadingScreen = () => {\r\n    const {isLoading, setIsLoading} = useContext(DataContext)\r\n    useEffect(() => {\r\n        setTimeout(() => {\r\n            setIsLoading(false)\r\n        }, 2000)\r\n    }, [])\r\n    return (\r\n        <>\r\n            {\r\n                isLoading ? \r\n                <div className='LoadingScreen'>\r\n                    <span className='loader'>\r\n                        <RingLoader color={'rgb(255, 208, 0)'} loading={isLoading} size={150} />\r\n                    </span>\r\n                </div>\r\n                : <></>\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default LoadingScreen"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,UAAU,EAAEC,SAAS,QAAQ,OAAO;AACpD,OAAOC,UAAU,MAAM,2BAA2B;AAClD,OAAO,qBAAqB;AAC5B,OAAOC,WAAW,IAAIC,OAAO,QAAQ,oBAAoB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAE1D,MAAMC,aAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACxB,MAAM;IAACC,SAAS;IAAEC;EAAY,CAAC,GAAGZ,UAAU,CAACG,WAAW,CAAC;EACzDF,SAAS,CAAC,MAAM;IACZY,UAAU,CAAC,MAAM;MACbD,YAAY,CAAC,KAAK,CAAC;IACvB,CAAC,EAAE,IAAI,CAAC;EACZ,CAAC,EAAE,EAAE,CAAC;EACN,oBACIN,OAAA,CAAAE,SAAA;IAAAM,QAAA,EAEQH,SAAS,gBACTL,OAAA;MAAKS,SAAS,EAAC,eAAe;MAAAD,QAAA,eAC1BR,OAAA;QAAMS,SAAS,EAAC,QAAQ;QAAAD,QAAA,eACpBR,OAAA,CAACJ,UAAU;UAACc,KAAK,EAAE,kBAAmB;UAACC,OAAO,EAAEN,SAAU;UAACO,IAAI,EAAE;QAAI;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACtE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC,gBACJhB,OAAA,CAAAE,SAAA,mBAAI;EAAC,gBAEb,CAAC;AAEX,CAAC;AAAAE,EAAA,CApBKD,aAAa;AAAAc,EAAA,GAAbd,aAAa;AAsBnB,eAAeA,aAAa;AAAA,IAAAc,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}