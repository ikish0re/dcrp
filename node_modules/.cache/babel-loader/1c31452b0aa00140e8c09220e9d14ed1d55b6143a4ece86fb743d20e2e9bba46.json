{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Kishore E G\\\\Documents\\\\React\\\\web-app\\\\src\\\\Components\\\\LoadingScreen.js\",\n  _s = $RefreshSig$();\nimport React, { useContext } from 'react';\nimport '../css/LoadingScreen.css';\nimport DataContext from '../Context/Context';\nimport { SpinnerDotted } from 'spinners-react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LoadingScreen = () => {\n  _s();\n  const {\n    isLoading,\n    setIsLoading\n  } = useContext(DataContext);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"LoadingScreen\",\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"loader\",\n      children: /*#__PURE__*/_jsxDEV(SpinnerDotted, {\n        size: 125,\n        thickness: 150,\n        speed: 80,\n        color: \"#36ad47\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"a\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 9\n  }, this);\n};\n_s(LoadingScreen, \"1F4S3mRiS89xsvQ6Iu+XW5uUMyM=\");\n_c = LoadingScreen;\nexport default LoadingScreen;\nvar _c;\n$RefreshReg$(_c, \"LoadingScreen\");","map":{"version":3,"names":["React","useContext","DataContext","SpinnerDotted","jsxDEV","_jsxDEV","LoadingScreen","_s","isLoading","setIsLoading","className","children","size","thickness","speed","color","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Kishore E G/Documents/React/web-app/src/Components/LoadingScreen.js"],"sourcesContent":["import React, { useContext } from 'react'\r\nimport '../css/LoadingScreen.css'\r\nimport DataContext from '../Context/Context';\r\nimport { SpinnerDotted } from 'spinners-react'\r\n\r\nconst LoadingScreen = () => {\r\n    const {isLoading, setIsLoading} = useContext(DataContext)\r\n    return (\r\n        <div className='LoadingScreen'>\r\n            <span className='loader'>\r\n                <SpinnerDotted size={125} thickness={150} speed={80} color=\"#36ad47\" />\r\n            </span>\r\n            <h2>a</h2>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LoadingScreen"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,UAAU,QAAQ,OAAO;AACzC,OAAO,0BAA0B;AACjC,OAAOC,WAAW,MAAM,oBAAoB;AAC5C,SAASC,aAAa,QAAQ,gBAAgB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE9C,MAAMC,aAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACxB,MAAM;IAACC,SAAS;IAAEC;EAAY,CAAC,GAAGR,UAAU,CAACC,WAAW,CAAC;EACzD,oBACIG,OAAA;IAAKK,SAAS,EAAC,eAAe;IAAAC,QAAA,gBAC1BN,OAAA;MAAMK,SAAS,EAAC,QAAQ;MAAAC,QAAA,eACpBN,OAAA,CAACF,aAAa;QAACS,IAAI,EAAE,GAAI;QAACC,SAAS,EAAE,GAAI;QAACC,KAAK,EAAE,EAAG;QAACC,KAAK,EAAC;MAAS;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACrE,CAAC,eACPd,OAAA;MAAAM,QAAA,EAAI;IAAC;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACT,CAAC;AAEd,CAAC;AAAAZ,EAAA,CAVKD,aAAa;AAAAc,EAAA,GAAbd,aAAa;AAYnB,eAAeA,aAAa;AAAA,IAAAc,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}